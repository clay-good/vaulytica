apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaulytica
  namespace: security
  labels:
    app: vaulytica
    version: v0.17.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vaulytica
  template:
    metadata:
      labels:
        app: vaulytica
        version: v0.17.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: vaulytica
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: vaulytica
        image: vaulytica:0.17.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: vaulytica-secrets
              key: anthropic-api-key
        - name: VAULYTICA_MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: vaulytica-config
              key: model-name
        - name: VAULYTICA_MAX_TOKENS
          valueFrom:
            configMapKeyRef:
              name: vaulytica-config
              key: max-tokens
        - name: VAULYTICA_ENABLE_RAG
          value: "true"
        - name: VAULYTICA_ENABLE_CACHE
          value: "true"
        - name: VAULYTICA_LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: cache
          mountPath: /app/outputs/cache
        - name: chroma-db
          mountPath: /app/chroma_db
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: vaulytica-cache-pvc
      - name: chroma-db
        persistentVolumeClaim:
          claimName: vaulytica-chroma-pvc
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vaulytica
              topologyKey: kubernetes.io/hostname

